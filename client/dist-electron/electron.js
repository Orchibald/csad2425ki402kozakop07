"use strict";const a=require("path"),{app:i,BrowserWindow:d,ipcMain:c}=require("electron"),{SerialPort:p}=require("serialport"),{ReadlineParser:h}=require("@serialport/parser-readline"),m=process.env.IS_DEV==="true";let t,e,l,f;const g=process.argv.slice(1);let r=null;g.forEach(o=>{o.startsWith("--port=")&&(r=o.split("=")[1])});!r&&process.env.ARDUINO_PORT&&(r=process.env.ARDUINO_PORT);function u(){t=new d({width:1324,height:850,minHeight:650,minWidth:600,autoHideMenuBar:!0,resizable:!0,frame:!0,webPreferences:{nodeIntegration:!1,contextIsolation:!0,preload:a.join(__dirname,"preload.js")}}),t.loadURL(m?"http://localhost:5173":`file://${a.join(__dirname,"../dist/index.html")}`)}async function v(){if(r)return r;const o=await p.list();for(let n of o)if(n.manufacturer&&n.manufacturer.includes("Arduino"))return n.path;return null}async function w(){try{const o=await v();if(!o){console.error("Arduino port not found"),t.webContents.send("arduino-connection-status",!1);return}e=new p({path:o,baudRate:9600}),l=e.pipe(new h({delimiter:`
`})),e.on("open",()=>{console.log("Serial port opened successfully"),t.webContents.send("arduino-connection-status",!0)}),e.on("error",n=>{console.error("Error opening serial port:",n.message),t.webContents.send("arduino-connection-status",!1)}),e.on("close",()=>{console.log("Serial port closed"),t.webContents.send("arduino-connection-status",!1)}),l.on("data",n=>{console.log("Received from Arduino:",n.trim()),t.webContents.send("arduino-data",n.trim())}),c.on("send-to-arduino",(n,s)=>{console.log("Sending to Arduino:",s),e.write(s+`
`)}),c.on("check-arduino-connection",()=>{const n=e&&e.isOpen;t.webContents.send("arduino-connection-status",n)})}catch(o){console.error("Error in setupSerialCommunication:",o),t.webContents.send("arduino-connection-status",!1)}}function A(){f=setInterval(async()=>{(!e||!e.isOpen)&&(console.log("Attempting to reconnect to Arduino..."),await w())},5e3)}i.whenReady().then(()=>{u(),w(),A(),i.on("activate",()=>{d.getAllWindows().length===0&&u()})});i.on("window-all-closed",()=>{clearInterval(f),process.platform!=="darwin"&&i.quit()});
